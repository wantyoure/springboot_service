# 언어와 jdk의 버전을 지정한다.
language: java
jdk:
  - openjdk17

# 어느 브랜치가 push 될 때 수행할지 지정한다.
# 오직 main 브랜치가 push될 때 수행하도록 지정하였다.
branches:
  only:
    - master

# 빌드 전에 gradlew의 권한을 추가한다.
before_install:
  - chmod +x gradlew

# Travis CI 서버의 Home
# gradle을 통하여 의존성을 받게 되면 이를 캐시하여 배포할 때 마다 다시 받지 않도록 설정한다.
cache:
  directories:
    - '$HOME/.m2/repository'
    - '$HOME/.gradle'

# main 브랜치에 push 되면 수행되는 명령어이다.
# 프로젝트 내에 권한이 추가된 gradlew를 활용하여 clean, build를 진행한다.
script: "./gradlew clean build"


before_deploy:
  - zip -r springboot-service *
  - mkdir -p deploy
  - mv springboot-service.zip deploy/springboot-service.zip

deploy:
  - provider: s3
    access_key_id: $AWS_ACCESS_KEY
    secret_access_key: $AWS_SECRET_KEY
    bucket: spring-service-build  # S3 버킷
    region: ap-northeast-2
    skip_cleanup: true
    acl: private  # zip 파일 접근을 private로
    local_dir: deploy   # before_deploy에서 생성한 디렉토리d
    wait-until-deployed: true

  - provider: codedeploy
    access_key_id: $AWS_ACCESS_KEY
    secret_access_key: $AWS_SECRET_KEY
    bucket: spring-service-build
    key: spring-service-build.zip
    bundle_type: zip
    application: spring_service
    deployment_group: spring_service_group
    region: ap-northeast-2
    wait-until-deployed: true
# CI 실행 완료 시 작성한 이메일로 알람 해보자!! webhook go goㅇㅇ
notifications:
  email:
    recipients:
      - qkrtmdgh55@naver.com